//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
    provider = "postgresql"
    url = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id Int @id() @default(autoincrement())
    firstName String
    secondName String
    telegramId Int @unique()
    recordId Record[]
    createdAt DateTime @default(now())
}

model Record {
    id Int @id() @default(autoincrement())
    serviceDescription String
    serviceType String
    userId Int
    user User @relation(references: [telegramId], fields: [userId], onDelete: Cascade)
    dateId Int
    date Date @relation(references: [id], fields: [dateId], onDelete: Cascade)
    time Time?
    isCompleted Boolean @default(false)
    createdAt DateTime @default(now())
}

model Date {
    id Int @id() @default(autoincrement())
    date DateTime
    isFullyBooked Boolean @default(false)
    time Time[]
    record Record[]
}

/// @@allow('read', true)
/// @@allow('update', future().version == 1)
model Time {
    id Int @id() @default(autoincrement())
    timeStart Int
    timeEnd Int
    timeSlot String
    dateId Int
    date Date @relation(references: [id], fields: [dateId], onDelete: Cascade)
    recordId Int @unique()
    record Record @relation(references: [id], fields: [recordId], onDelete: Cascade)
    version Int
    isBooked Boolean @default(false)
}